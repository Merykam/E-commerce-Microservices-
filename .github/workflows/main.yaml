on:
  push:
    branches:
      - dev
      - main
      - '*service-authentification*'
      - '*service-cart*'
      - '*service-order*'
      - '*service-payment*'
      - '*service-product*'
      - '*frontend*'

jobs:
  build-and-push-service-authentification:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'service-authentification')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA5RGPWXNPTLMQ4HEA
          aws-secret-access-key: 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
          aws-region: eu-north-1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA5RGPWXNPTLMQ4HEA
          aws-secret-access-key: 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
          aws-region: eu-north-1

  build-and-push-service-cart:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'service-cart')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA5RGPWXNPTLMQ4HEA
          aws-secret-access-key: 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
          aws-region: eu-north-1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: AKIA5RGPWXNPTLMQ4HEA
          aws-secret-access-key: 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
          aws-region: eu-north-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: true
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: service-authentification
        working-directory: apps/service-authentification
        run: |
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG -f Dockerfile ../../
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_ENV

      # - name: Fill in the new image ID in the Amazon ECS task definition
      #   id: task-def
      #   uses: aws-actions/amazon-ecs-render-task-definition@v1
      #   with:
      #     task-definition: apps/service-cart/task-definition-service-cart-revision1.json
      #     container-name: image-service-auhtentification-container
      #     image: ${{env.ECR_REGISTRY}}/${{env.REPOSITORY}}:${{env.IMAGE_TAG}}

      # - name: Deploy to Amazon ECS
      #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      #   with:
      #     task-definition: ${{ steps.task-def.outputs.task-definition }}
      #     service: service-cart-service
      #     cluster: cluster-service-cart
      #     wait-for-service-stability: true


  build-and-push-service-order:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'service-order')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install

  build-and-push-service-payment:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'service-payment')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install

  build-and-push-service-product:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'service-product')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install

  build-and-push-frontend:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main' || contains(github.ref_name, 'frontend')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.10.0'
      - name: Install dependencies
        run: npm install
